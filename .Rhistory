library(stargazer)
#save(orig_data,file='../files for project/orig_data.RData')
load(file='../files for project/orig_data.RData')
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
buyoptions_vec <- c('inspection','reserve','buyitnow')
desc_data <- orig_data %>% select(dealer,all_of(buyoptions_vec)) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Set labels
desc_data$dealer <- factor(desc_data$dealer, labels = c('Seller','Dealer'))
desc_data$inspection <- factor(desc_data$inspection,labels = c('Without Inspection','With Inspection'))
desc_data$reserve <- factor(desc_data$reserve,level=c(0,1), labels = c('No Reserve Prive','With Secret Reserve'))
desc_data$buyitnow <- factor(desc_data$buyitnow,level=c(0,1), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
# Get Descriptive Tables
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
#-------------------------
# Part 2
biddy_list <- sprintf("biddy%d",1:22)  ## vector with formatted combination of text and variable values
my.max <- function(x){
ifelse(!all(is.na(x)), max(x, na.rm=T), NA)
}  ## set my own max function to avoid '-INF'
biddy <- orig_data %>% select(biddy_list)
biddy <- biddy %>% mutate(winningbid=apply(biddy,1,FUN=my.max)) %>%
mutate(winningbid=na_if(winningbid,NA))
##Testing:
##biddy$winningbid
##i <- sample(1:length(biddy),1)
##stopifnot(biddy$winningbid[i]==my.max(biddy[i,-23]))
biddy <- orig_data %>% select('dealer','reserve','bookvalue','numbids','startbid','totallisted','totalsold') %>%
add_column(biddy['winningbid']) %>%
mutate(margin=winningbid - bookvalue)
biddy
## I found a great amount of obs have negative margin <- (winningbid - bookvalue)
#stargazer(table)
biddy %>% group_by('dealer') %>%   summarize(mean_numbids = mean(numbids, na.rm = TRUE),
mean_totalsold = mean(totalsold, na.rm = TRUE))
biddy %>% group_by(dealer) %>%   summarize(mean_numbids = mean(numbids, na.rm = TRUE),
mean_totalsold = mean(totalsold, na.rm = TRUE))
#install.packages("stargazer")
library(tidyverse) #includes the dplyr and tidyr packages
library(dplyr)
library(tidyr)
library(data.table)
library(stargazer)
#save(orig_data,file='../files for project/orig_data.RData')
load(file='../files for project/orig_data.RData')
# Set labels
orig_data$dealer <- factor(desc_data$dealer, labels = c('Seller','Dealer'))
orig_data$inspection <- factor(desc_data$inspection,labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(desc_data$reserve,level=c(0,1), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(desc_data$buyitnow,level=c(0,1), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
buyoptions_vec <- c('inspection','reserve','buyitnow')
desc_data <- orig_data %>% select(dealer,all_of(buyoptions_vec)) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
#-------------------------
# Part 2
biddy_list <- sprintf("biddy%d",1:22)  ## vector with formatted combination of text and variable values
my.max <- function(x){
ifelse(!all(is.na(x)), max(x, na.rm=T), NA)
}  ## set my own max function to avoid '-INF'
biddy <- orig_data %>% select(biddy_list)
biddy <- biddy %>% mutate(winningbid=apply(biddy,1,FUN=my.max)) %>%
mutate(winningbid=na_if(winningbid,NA))
##Testing:
##biddy$winningbid
##i <- sample(1:length(biddy),1)
##stopifnot(biddy$winningbid[i]==my.max(biddy[i,-23]))
biddy <- orig_data %>% select('dealer','reserve','bookvalue','numbids','startbid','totallisted','totalsold') %>%
add_column(biddy['winningbid']) %>%
mutate(margin=winningbid - bookvalue)
biddy %>% group_by(dealer) %>%   summarize(mean_numbids = mean(numbids, na.rm = TRUE),
mean_totalsold = mean(totalsold, na.rm = TRUE))
biddy
## I found a great amount of obs have negative margin <- (winningbid - bookvalue)
#stargazer(table)
biddy %>% group_by(dealer) %>%   summarize(mean_numbids = mean(numbids, na.rm = TRUE),
mean_totalsold = mean(totalsold, na.rm = TRUE))
# Set labels
orig_data$dealer <- factor(desc_data$dealer, labels = c('Seller','Dealer'))
orig_data$inspection <- factor(desc_data$inspection,labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(desc_data$reserve, labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(desc_data$buyitnow, labels = c('No BUYITNOW Option','With BUYITNOW Option'))
orig_data$dealer <- factor(orig_data$dealer, labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection,labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, labels = c('No BUYITNOW Option','With BUYITNOW Option'))
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1),labels = c('Seller','Dealer'))
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1), labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, level=c(0,1), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, level=c(0,1), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
buyoptions_vec <- c('inspection','reserve','buyitnow')
desc_data <- orig_data %>% select(dealer,all_of(buyoptions_vec)) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
desc_data
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
table
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1,NA), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1,NA), labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, level=c(0,1,NA), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, level=c(0,1,NA), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit()
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow)
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>% group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
# Get Descriptive Tables
buyoptions_vec <- c('inspection', 'reserve', 'buyitnow')
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
buyoptions_vec <- c('inspection', 'reserve', 'buyitnow')
table <- NULL
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
buyoptions_vec <- c('inspection', 'reserve', 'buyitnow')
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1), labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, level=c(0,1), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, level=c(0,1), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer)  ##group by dealer and private seller
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer) %>%  ##group by dealer and private seller
na.omit()
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer) %>%  ##group by dealer and private seller
na.exclude()
# Get Descriptive Tables
buyoptions_vec <- c('inspection', 'reserve', 'buyitnow')
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer) %>%  ##group by dealer and private seller
na.exclude()
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer) #%>%  ##group by dealer and private seller
View(biddy)
#save(orig_data,file='../files for project/orig_data.RData')
load(file='../files for project/orig_data.RData')
View(orig_data)
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1), labels = c('Without Inspection','With Inspection'))
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1), labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, level=c(0,1), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, level=c(0,1), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
group_by(dealer) #%>%  ##group by dealer and private seller
View(desc_data)
# Set labels
orig_data$dealer <- as.factor(orig_data$dealer, level=c(0,1), labels = c('Seller','Dealer'))
#install.packages("stargazer")
library(tidyverse) #includes the dplyr and tidyr packages
library(dplyr)
library(tidyr)
library(data.table)
library(stargazer)
#save(orig_data,file='../files for project/orig_data.RData')
load(file='../files for project/orig_data.RData')
# Set labels
orig_data$dealer <- factor(orig_data$dealer, level=c(0,1,NA), labels = c('Seller','Dealer'))
orig_data$inspection <- factor(orig_data$inspection, level=c(0,1,NA), labels = c('Without Inspection','With Inspection'))
orig_data$reserve <- factor(orig_data$reserve, level=c(0,1,NA), labels = c('No Reserve Prive','With Secret Reserve'))
orig_data$buyitnow <- factor(orig_data$buyitnow, level=c(0,1,NA), labels = c('No BUYITNOW Option','With BUYITNOW Option'))
View(orig_data)
orig_data$reserve
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer)  ##group by dealer and private seller
# Get Descriptive Tables
buyoptions_vec <- c('inspection', 'reserve', 'buyitnow')
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
data.frame(table)
#-------------------------
# Part 2
biddy_list <- sprintf("biddy%d",1:22)  ## vector with formatted combination of text and variable values
my.max <- function(x){
ifelse(!all(is.na(x)), max(x, na.rm=T), NA)
}  ## set my own max function to avoid '-INF'
biddy <- orig_data %>% select(biddy_list)
biddy <- biddy %>% mutate(winningbid=apply(biddy,1,FUN=my.max)) %>%
mutate(winningbid=na_if(winningbid,NA))
biddy <- orig_data %>% select('dealer','reserve','bookvalue','numbids','startbid','totallisted','totalsold') %>%
add_column(biddy['winningbid']) %>%
mutate(margin=winningbid - bookvalue)
biddy %>% group_by(dealer) %>%   summarize(mean_numbids = mean(numbids, na.rm = TRUE),
mean_totalsold = mean(totalsold, na.rm = TRUE))
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer) %>% ##group by dealer and private seller
desc_data %>% summarise(groups=dealer)
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer) %>% ##group by dealer and private seller
desc_data %>% summarise(n())
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer) %>% ##group by dealer and private seller
desc_data %>% summarise(n())
#-----------------------
# Part 1 Summary Statistics (Proportion of services provided, grouping by seller/dealer)
desc_data <- orig_data %>% select(dealer,inspection, reserve, buyitnow) %>%
na.omit() %>%
group_by(dealer) ##group by dealer and private seller
desc_data %>% summarise(n())
desc_data %>% summarise(Destribution_of_sellerdealer=n())
desc_data %>% summarise(Number_of_seller/dealer=n())
desc_data %>% summarise(Number_of_sellerdealer=n())
library(ggplot2)
library(ggthemes)
library(ggthemes)
# Plotting
ggplot(desc_data, aes(dealer)) +  geom_bar()
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table))
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE)
transpose(tab;e)
transpose(table)
list(table)
table <- transpose(list(table))
table
table
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
table <- NULL
for (i in 1:3){
table_i <- table(desc_data[c(buyoptions_vec[i],'dealer')])
table_i <- round(prop.table(table_i),4)
table <- rbind(table,table_i)
}
t(table)
table <- t(table)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE)
ggplot(data=table) +
geom_bar(stat="identity")+
scale_fill_brewer(palette="Paired")+
theme_minimal()
ggplot(data=table) +
geom_bar(stat="identity")+
scale_fill_brewer(palette="Paired")+
theme_minimal()
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 1.5, cex.lab=1.5)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.5, cex.lab=1.5)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.5, cex.lab=0.5)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 3)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 1)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.6)
barplot(table, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
ylab="Proportion", col=c("darkblue","red"), ylim=range(pretty(c(0, table)),
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,1),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.5),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.55)
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.5)
barplot(table, main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.53)
table
barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.53)
barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(table[,c(2,4,6)], 0, round(table[,c(2,4,6)], 1),cex=1,pos=3)
barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(table[,c(2,4,6)], 0, round(table[,c(2,4,6)], 1),cex=1,pos=3)
barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)+
text(table[,c(2,4,6)], 0, round(table[,c(2,4,6)], 1),cex=1,pos=3)
barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)+
text(table[,c(2,4,6)], 0, round(table[,c(2,4,6)], 1),cex=1,pos=3)
text(0,bp,round(table[,c(2,4,6)], 1),cex=1,pos=4)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,round(table[,c(2,4,6)], 1),cex=1,pos=4)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,round(table[,c(2,4,6)], 1),cex=1,pos=4)
text(0,bp,round(table[,c(2,4,6)], 1),cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,round(table[,c(2,4,6)], 1),cex=1,pos=3)
text(0,bp,round(table, 1),cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,round(table, 1),cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,round(table, 1),cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)+text(0,bp,round(table, 1),cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(0,bp,table[,c(2,4,6)],cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(1,bp,table[,c(2,4,6)],cex=1,pos=3)
text(bp,0,table[,c(2,4,6)],cex=1,pos=3)
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
text(bp,table[,c(2,4,6)],table[,c(2,4,6)],cex=1,pos=3)
"
This function help to transfer digital to percentage
"
"""
This function help to transfer digital to percentage
"""
?formatC
pct <- function(x,digits = 2) {
paste0(formatC(x * 100,digits = digits, ...), "%")
}
text(bp,pct(table[,c(2,4,6)]),table[,c(2,4,6)],cex=1,pos=3)
# Plotting
ggplot(desc_data, aes(dealer)) +  geom_bar()
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
# Plotting
ggplot(desc_data, aes(dealer), main="Distribution of Seller/Dealer") +  geom_bar()
# Plotting
ggplot(desc_data, aes(dealer), main="Distribution of Seller/Dealer") +  geom_bar()
?ggplot
# Plotting
ggplot(desc_data, aes(dealer)) + ggtitle("Distribution of Seller/Dealer") +  geom_bar()
# Plotting
ggplot(desc_data, aes(dealer)) + ggtitle("Distribution of Seller/Dealer") +  geom_bar() +
xlab("Type of Wellers") + ylab("Number of Obs")
# Plotting
ggplot(desc_data, aes(dealer)) + ggtitle("Distribution of Seller/Dealer") +  geom_bar() +
xlab("Type of Sellers") + ylab("Number of Obs")
bp <- barplot(table[,c(2,4,6)], main="Distribution of Options",
ylab="Proportion", col=c("darkblue","red"), ylim=range(0,0.4),
legend = rownames(table), beside=TRUE, cex.axis = 0.8, cex.lab=0.8, cex.names = 0.8)
